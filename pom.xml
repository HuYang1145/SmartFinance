<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 项目基本信息 -->
    <groupId>com.bupt.group8</groupId>
    <artifactId>group19</artifactId>
    <version>1.0.0</version>
    <name>SmartFinance</name>
    <description>A Swing GUI application for financial management</description>

    <!-- 项目属性 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>21</maven.compiler.release>
        <java.version>21</java.version>
        <file.encoding>UTF-8</file.encoding>
        <!-- Define Mockito version as a property -->
        <mockito.version>5.8.0</mockito.version> <!-- **Added/Corrected:** Define the Mockito version property here -->
         <!-- Define JUnit Jupiter version as a property -->
         <junit.jupiter.version>5.11.3</junit.jupiter.version> <!-- Using the version from your original dependency -->
    </properties>

    <!-- 依赖 -->
    <dependencies>
        <!-- Apache Commons CSV，用于 CSV 文件处理 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.11.0</version>
        </dependency>

        <!-- Gson，用于 JSON 处理 -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.11.0</version>
        </dependency>

        <!-- FlatLaf，用于 Swing GUI 主题 -->
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf</artifactId>
            <version>3.5.1</version>
        </dependency>

        <!-- JFreeChart，用于图表生成 -->
        <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>1.5.5</version>
        </dependency>

        <!-- JUnit 5，用于单元测试 -->
        <!-- Keeping the single 'junit-jupiter' dependency as in your original file -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version> <!-- Use the version property -->
            <scope>test</scope>
        </dependency>

        <!-- Mockito，用于创建模拟对象 -->
        <!-- Add Mockito Core -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version> <!-- Use the version property -->
            <scope>test</scope>
        </dependency>
        <!-- Add Mockito JUnit Jupiter integration -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version> <!-- Use the version property -->
            <scope>test</scope>
        </dependency>

    </dependencies>

    <!-- 构建配置 -->
    <build>
        <plugins>
            <!-- Maven 编译器插件，使用 Java 21 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <release>${java.version}</release>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

             <!-- Maven Surefire Plugin for running tests -->
             <!-- This plugin is essential for running JUnit tests -->
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-surefire-plugin</artifactId>
                 <version>3.2.5</version> <!-- Use a recent version -->
                 <configuration>
                      <!-- Configuration for JUnit 5 -->
                      <!-- If not using AspectJ weaving, remove the argLine part -->
                     <!-- <argLine>-javaagent:"${settings.localRepository}"/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar</argLine> -->
                      <!-- If you have a logging.properties file for tests -->
                     <!-- <systemPropertyVariables>
                         java.util.logging.config.file=${project.build.testOutputDirectory}/logging.properties
                     </systemPropertyVariables> -->
                     <testFailureIgnore>false</testFailureIgnore> <!-- Fail build on test failure -->
                 </configuration>
                 <!-- Dependencies for the Surefire plugin itself (ensure it can run JUnit 5) -->
                 <dependencies>
                      <!-- If you removed junit-jupiter-engine from main dependencies, add it here -->
                      <!-- <dependency>
                          <groupId>org.junit.jupiter</groupId>
                          <artifactId>junit-jupiter-engine</artifactId>
                          <version>${junit.jupiter.version}</version>
                      </dependency> -->
                      <!-- If you need AspectJ weaving for mocks (less common) -->
                      <!-- <dependency>
                           <groupId>org.aspectj</groupId>
                           <artifactId>aspectjweaver</artifactId>
                           <version>${aspectj.version}</version>
                      </dependency> -->
                 </dependencies>
             </plugin>
             <!-- Define aspectj.version property IF you included the aspectj weaver dependency -->
             <!-- <properties>
                 <aspectj.version>1.9.21</aspectj.version>
             </properties> -->


            <!-- Maven JAR 插件，生成标准 JAR 文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>Main.SmartFinanceApplication</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- Exec 插件，方便运行主类 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <mainClass>Main.SmartFinanceApplication</mainClass>
                </configuration>
            </plugin>

            <!-- Maven Javadoc 插件，用于生成 Javadoc 文档 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.6.3</version>
                <executions>
                    <execution>
                        <id>generate-javadoc</id>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                         <phase>package</phase> <!-- Changed phase to package -->
                    </execution>
                </executions>
                <configuration>
                    <source>${java.version}</source>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <charset>${project.build.sourceEncoding}</charset>
                    <docencoding>${project.build.sourceEncoding}</docencoding>
                    <show>public</show> <!-- Changed to public, private is rarely needed in API docs -->
                    <author>true</author>
                    <version>true</version>
                    <doctitle>${project.name} API Documentation</doctitle>
                    <windowtitle>${project.name} API Documentation</windowtitle>
                    <!-- 降低 Javadoc 严格性，忽略缺少注释的错误 -->
                    <additionalOptions>
                        <additionalOption>-Xdoclint:none</additionalOption>
                    </additionalOptions>
                </configuration>
            </plugin>

            <!-- Maven Resources 插件，确保资源文件编码正确 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>